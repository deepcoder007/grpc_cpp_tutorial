// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test_service.proto

#include "test_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace test {
namespace app {
PROTOBUF_CONSTEXPR OrderRequest::OrderRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.order_id_)*/int64_t{0}
  , /*decltype(_impl_.client_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OrderRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderRequestDefaultTypeInternal() {}
  union {
    OrderRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderRequestDefaultTypeInternal _OrderRequest_default_instance_;
PROTOBUF_CONSTEXPR OrderResponse::OrderResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.order_id_)*/int64_t{0}
  , /*decltype(_impl_.client_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OrderResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderResponseDefaultTypeInternal() {}
  union {
    OrderResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderResponseDefaultTypeInternal _OrderResponse_default_instance_;
}  // namespace app
}  // namespace test
static ::_pb::Metadata file_level_metadata_test_5fservice_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_test_5fservice_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_test_5fservice_2eproto = nullptr;

const uint32_t TableStruct_test_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::test::app::OrderRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::test::app::OrderRequest, _impl_.order_id_),
  PROTOBUF_FIELD_OFFSET(::test::app::OrderRequest, _impl_.client_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::test::app::OrderResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::test::app::OrderResponse, _impl_.order_id_),
  PROTOBUF_FIELD_OFFSET(::test::app::OrderResponse, _impl_.client_id_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::test::app::OrderRequest)},
  { 8, -1, -1, sizeof(::test::app::OrderResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::test::app::_OrderRequest_default_instance_._instance,
  &::test::app::_OrderResponse_default_instance_._instance,
};

const char descriptor_table_protodef_test_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022test_service.proto\022\010test.app\032\036google/p"
  "rotobuf/wrappers.proto\032\031google/protobuf/"
  "any.proto\"3\n\014OrderRequest\022\020\n\010order_id\030\001 "
  "\001(\003\022\021\n\tclient_id\030\002 \001(\005\"4\n\rOrderResponse\022"
  "\020\n\010order_id\030\001 \001(\003\022\021\n\tclient_id\030\002 \001(\0052Q\n\013"
  "TestService\022B\n\013ProcessTick\022\027.test.app.Or"
  "derResponse\032\026.test.app.OrderRequest(\0010\001B"
  "\nZ\010test.appb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_test_5fservice_2eproto_deps[2] = {
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
  &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::_pbi::once_flag descriptor_table_test_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_test_5fservice_2eproto = {
    false, false, 299, descriptor_table_protodef_test_5fservice_2eproto,
    "test_service.proto",
    &descriptor_table_test_5fservice_2eproto_once, descriptor_table_test_5fservice_2eproto_deps, 2, 2,
    schemas, file_default_instances, TableStruct_test_5fservice_2eproto::offsets,
    file_level_metadata_test_5fservice_2eproto, file_level_enum_descriptors_test_5fservice_2eproto,
    file_level_service_descriptors_test_5fservice_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_test_5fservice_2eproto_getter() {
  return &descriptor_table_test_5fservice_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_test_5fservice_2eproto(&descriptor_table_test_5fservice_2eproto);
namespace test {
namespace app {

// ===================================================================

class OrderRequest::_Internal {
 public:
};

OrderRequest::OrderRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:test.app.OrderRequest)
}
OrderRequest::OrderRequest(const OrderRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OrderRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.order_id_){}
    , decltype(_impl_.client_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.order_id_, &from._impl_.order_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.client_id_) -
    reinterpret_cast<char*>(&_impl_.order_id_)) + sizeof(_impl_.client_id_));
  // @@protoc_insertion_point(copy_constructor:test.app.OrderRequest)
}

inline void OrderRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.order_id_){int64_t{0}}
    , decltype(_impl_.client_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

OrderRequest::~OrderRequest() {
  // @@protoc_insertion_point(destructor:test.app.OrderRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OrderRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void OrderRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OrderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:test.app.OrderRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.order_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.client_id_) -
      reinterpret_cast<char*>(&_impl_.order_id_)) + sizeof(_impl_.client_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrderRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 order_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.order_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 client_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.client_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OrderRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:test.app.OrderRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 order_id = 1;
  if (this->_internal_order_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_order_id(), target);
  }

  // int32 client_id = 2;
  if (this->_internal_client_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_client_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:test.app.OrderRequest)
  return target;
}

size_t OrderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:test.app.OrderRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 order_id = 1;
  if (this->_internal_order_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_order_id());
  }

  // int32 client_id = 2;
  if (this->_internal_client_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_client_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrderRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OrderRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrderRequest::GetClassData() const { return &_class_data_; }


void OrderRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OrderRequest*>(&to_msg);
  auto& from = static_cast<const OrderRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:test.app.OrderRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_order_id() != 0) {
    _this->_internal_set_order_id(from._internal_order_id());
  }
  if (from._internal_client_id() != 0) {
    _this->_internal_set_client_id(from._internal_client_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OrderRequest::CopyFrom(const OrderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:test.app.OrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderRequest::IsInitialized() const {
  return true;
}

void OrderRequest::InternalSwap(OrderRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.client_id_)
      + sizeof(OrderRequest::_impl_.client_id_)
      - PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.order_id_)>(
          reinterpret_cast<char*>(&_impl_.order_id_),
          reinterpret_cast<char*>(&other->_impl_.order_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OrderRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_test_5fservice_2eproto_getter, &descriptor_table_test_5fservice_2eproto_once,
      file_level_metadata_test_5fservice_2eproto[0]);
}

// ===================================================================

class OrderResponse::_Internal {
 public:
};

OrderResponse::OrderResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:test.app.OrderResponse)
}
OrderResponse::OrderResponse(const OrderResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OrderResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.order_id_){}
    , decltype(_impl_.client_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.order_id_, &from._impl_.order_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.client_id_) -
    reinterpret_cast<char*>(&_impl_.order_id_)) + sizeof(_impl_.client_id_));
  // @@protoc_insertion_point(copy_constructor:test.app.OrderResponse)
}

inline void OrderResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.order_id_){int64_t{0}}
    , decltype(_impl_.client_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

OrderResponse::~OrderResponse() {
  // @@protoc_insertion_point(destructor:test.app.OrderResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OrderResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void OrderResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OrderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:test.app.OrderResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.order_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.client_id_) -
      reinterpret_cast<char*>(&_impl_.order_id_)) + sizeof(_impl_.client_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OrderResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 order_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.order_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 client_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.client_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OrderResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:test.app.OrderResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 order_id = 1;
  if (this->_internal_order_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_order_id(), target);
  }

  // int32 client_id = 2;
  if (this->_internal_client_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_client_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:test.app.OrderResponse)
  return target;
}

size_t OrderResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:test.app.OrderResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 order_id = 1;
  if (this->_internal_order_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_order_id());
  }

  // int32 client_id = 2;
  if (this->_internal_client_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_client_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OrderResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OrderResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OrderResponse::GetClassData() const { return &_class_data_; }


void OrderResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OrderResponse*>(&to_msg);
  auto& from = static_cast<const OrderResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:test.app.OrderResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_order_id() != 0) {
    _this->_internal_set_order_id(from._internal_order_id());
  }
  if (from._internal_client_id() != 0) {
    _this->_internal_set_client_id(from._internal_client_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OrderResponse::CopyFrom(const OrderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:test.app.OrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderResponse::IsInitialized() const {
  return true;
}

void OrderResponse::InternalSwap(OrderResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderResponse, _impl_.client_id_)
      + sizeof(OrderResponse::_impl_.client_id_)
      - PROTOBUF_FIELD_OFFSET(OrderResponse, _impl_.order_id_)>(
          reinterpret_cast<char*>(&_impl_.order_id_),
          reinterpret_cast<char*>(&other->_impl_.order_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OrderResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_test_5fservice_2eproto_getter, &descriptor_table_test_5fservice_2eproto_once,
      file_level_metadata_test_5fservice_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace app
}  // namespace test
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::test::app::OrderRequest*
Arena::CreateMaybeMessage< ::test::app::OrderRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::test::app::OrderRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::test::app::OrderResponse*
Arena::CreateMaybeMessage< ::test::app::OrderResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::test::app::OrderResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
