// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test_service.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_test_5fservice_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_test_5fservice_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/wrappers.pb.h>
#include <google/protobuf/any.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_test_5fservice_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_test_5fservice_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_test_5fservice_2eproto;
namespace test {
namespace app {
class OrderRequest;
struct OrderRequestDefaultTypeInternal;
extern OrderRequestDefaultTypeInternal _OrderRequest_default_instance_;
class OrderResponse;
struct OrderResponseDefaultTypeInternal;
extern OrderResponseDefaultTypeInternal _OrderResponse_default_instance_;
}  // namespace app
}  // namespace test
PROTOBUF_NAMESPACE_OPEN
template<> ::test::app::OrderRequest* Arena::CreateMaybeMessage<::test::app::OrderRequest>(Arena*);
template<> ::test::app::OrderResponse* Arena::CreateMaybeMessage<::test::app::OrderResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace test {
namespace app {

// ===================================================================

class OrderRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:test.app.OrderRequest) */ {
 public:
  inline OrderRequest() : OrderRequest(nullptr) {}
  ~OrderRequest() override;
  explicit PROTOBUF_CONSTEXPR OrderRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  OrderRequest(const OrderRequest& from);
  OrderRequest(OrderRequest&& from) noexcept
    : OrderRequest() {
    *this = ::std::move(from);
  }

  inline OrderRequest& operator=(const OrderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderRequest& operator=(OrderRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrderRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const OrderRequest* internal_default_instance() {
    return reinterpret_cast<const OrderRequest*>(
               &_OrderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(OrderRequest& a, OrderRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(OrderRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrderRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<OrderRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const OrderRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const OrderRequest& from) {
    OrderRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "test.app.OrderRequest";
  }
  protected:
  explicit OrderRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrderIdFieldNumber = 1,
    kClientIdFieldNumber = 2,
  };
  // int64 order_id = 1;
  void clear_order_id();
  int64_t order_id() const;
  void set_order_id(int64_t value);
  private:
  int64_t _internal_order_id() const;
  void _internal_set_order_id(int64_t value);
  public:

  // int32 client_id = 2;
  void clear_client_id();
  int32_t client_id() const;
  void set_client_id(int32_t value);
  private:
  int32_t _internal_client_id() const;
  void _internal_set_client_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:test.app.OrderRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t order_id_;
    int32_t client_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_5fservice_2eproto;
};
// -------------------------------------------------------------------

class OrderResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:test.app.OrderResponse) */ {
 public:
  inline OrderResponse() : OrderResponse(nullptr) {}
  ~OrderResponse() override;
  explicit PROTOBUF_CONSTEXPR OrderResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  OrderResponse(const OrderResponse& from);
  OrderResponse(OrderResponse&& from) noexcept
    : OrderResponse() {
    *this = ::std::move(from);
  }

  inline OrderResponse& operator=(const OrderResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderResponse& operator=(OrderResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrderResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const OrderResponse* internal_default_instance() {
    return reinterpret_cast<const OrderResponse*>(
               &_OrderResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(OrderResponse& a, OrderResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(OrderResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrderResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<OrderResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const OrderResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const OrderResponse& from) {
    OrderResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "test.app.OrderResponse";
  }
  protected:
  explicit OrderResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrderIdFieldNumber = 1,
    kClientIdFieldNumber = 2,
  };
  // int64 order_id = 1;
  void clear_order_id();
  int64_t order_id() const;
  void set_order_id(int64_t value);
  private:
  int64_t _internal_order_id() const;
  void _internal_set_order_id(int64_t value);
  public:

  // int32 client_id = 2;
  void clear_client_id();
  int32_t client_id() const;
  void set_client_id(int32_t value);
  private:
  int32_t _internal_client_id() const;
  void _internal_set_client_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:test.app.OrderResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t order_id_;
    int32_t client_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_5fservice_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// OrderRequest

// int64 order_id = 1;
inline void OrderRequest::clear_order_id() {
  _impl_.order_id_ = int64_t{0};
}
inline int64_t OrderRequest::_internal_order_id() const {
  return _impl_.order_id_;
}
inline int64_t OrderRequest::order_id() const {
  // @@protoc_insertion_point(field_get:test.app.OrderRequest.order_id)
  return _internal_order_id();
}
inline void OrderRequest::_internal_set_order_id(int64_t value) {
  
  _impl_.order_id_ = value;
}
inline void OrderRequest::set_order_id(int64_t value) {
  _internal_set_order_id(value);
  // @@protoc_insertion_point(field_set:test.app.OrderRequest.order_id)
}

// int32 client_id = 2;
inline void OrderRequest::clear_client_id() {
  _impl_.client_id_ = 0;
}
inline int32_t OrderRequest::_internal_client_id() const {
  return _impl_.client_id_;
}
inline int32_t OrderRequest::client_id() const {
  // @@protoc_insertion_point(field_get:test.app.OrderRequest.client_id)
  return _internal_client_id();
}
inline void OrderRequest::_internal_set_client_id(int32_t value) {
  
  _impl_.client_id_ = value;
}
inline void OrderRequest::set_client_id(int32_t value) {
  _internal_set_client_id(value);
  // @@protoc_insertion_point(field_set:test.app.OrderRequest.client_id)
}

// -------------------------------------------------------------------

// OrderResponse

// int64 order_id = 1;
inline void OrderResponse::clear_order_id() {
  _impl_.order_id_ = int64_t{0};
}
inline int64_t OrderResponse::_internal_order_id() const {
  return _impl_.order_id_;
}
inline int64_t OrderResponse::order_id() const {
  // @@protoc_insertion_point(field_get:test.app.OrderResponse.order_id)
  return _internal_order_id();
}
inline void OrderResponse::_internal_set_order_id(int64_t value) {
  
  _impl_.order_id_ = value;
}
inline void OrderResponse::set_order_id(int64_t value) {
  _internal_set_order_id(value);
  // @@protoc_insertion_point(field_set:test.app.OrderResponse.order_id)
}

// int32 client_id = 2;
inline void OrderResponse::clear_client_id() {
  _impl_.client_id_ = 0;
}
inline int32_t OrderResponse::_internal_client_id() const {
  return _impl_.client_id_;
}
inline int32_t OrderResponse::client_id() const {
  // @@protoc_insertion_point(field_get:test.app.OrderResponse.client_id)
  return _internal_client_id();
}
inline void OrderResponse::_internal_set_client_id(int32_t value) {
  
  _impl_.client_id_ = value;
}
inline void OrderResponse::set_client_id(int32_t value) {
  _internal_set_client_id(value);
  // @@protoc_insertion_point(field_set:test.app.OrderResponse.client_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace app
}  // namespace test

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_test_5fservice_2eproto
